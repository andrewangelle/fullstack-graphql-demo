version: 2.1

_common:
  node-docker: &node-docker
    - image: circleci/node:10.13.0
  restore-cache: &restore-cache
    keys:
      - bootstrap-v1-{{ .Branch }}-{{ .Revision }}
  attach-workspace: &attach-workspace
    at: .

jobs:
  bootstrap:
    docker: *node-docker
    steps:
      - restore_cache: *restore-cache
      - checkout
      - run:
          name: Bootstrap lerna
          command: npx lerna bootstrap
      - save_cache:
          key: bootstrap-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - .

  test_web:
    docker: *node-docker
    steps:
      - restore_cache: *restore-cache
      - run:
          name: Run client tests
          command: cd packages/client && npm test

  build_web:
    docker: *node-docker
    steps:
      - restore_cache: *restore-cache
      - run:
          name: Run client build
          command: cd packages/client && npm run build
      - persist_to_workspace:
          root: .
          paths:
            - packages/client/build

  build_web_docker:
    docker: *node-docker
    steps:
      - restore_cache: *restore-cache
      - run: echo 'Building image for bcweb.me'
      - run: curl -X POST -H Content-type=application/json --data text='Deployment starting for bcweb.me' $SLACKHOOK
      - run: docker build -t bcweb:latest ./packages/client/
      - run: docker login --username $DOCKER_USER --password $DOCKER_PW
      - run: docker tag bcweb:latest bcapp/bcweb:latest
      - run: docker push bcapp/bcweb:latest
      - run: echo 'Build success for bcweb.me'

  deploy_web:
    docker: *node-docker
    steps:
      - restore_cache: *restore-cache
      - add_ssh_keys:
          fingerprints:
            - $DEPLOY_FINGERPRINT
      - run: echo 'Deployment start for bcweb.me'
      - run: ssh -oStrictHostKeyChecking=no -v $DROPLET_USER@$DROPLET_IP "bash ./deploy-web.sh"
      - run: echo 'Deployment success for bcweb.me'

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - bootstrap

      - test_web:
          requires:
            - bootstrap

      - build_web:
          requires:
            - bootstrap
            - test_web

      - build_web_docker:
          filters:
            branches:
              only: master
          requires:
            - bootstrap
            - test_web
            - build_web

      - deploy_web:
          filters:
            branches:
              only: master
          requires:
            - bootstrap
            - test_web
            - build_web
            - build_web_docker
